import{d as V,_ as x,r as j,o as i,c as l,a as s,b as m,w as S,e as N,u as $,f as _,g as h,v as b,h as I,i as O,t as T,p as D,j as F,k as M,l as q,m as E,F as w,n as J,q as B}from"./index.003e0270.js";import{c as Z,g as A}from"./index.60cbd3c3.js";const U="https://lyyqilmwickycckqcbjy.supabase.co",Y="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx5eXFpbG13aWNreWNja3FjYmp5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY2NjA4OTExOCwiZXhwIjoxOTgxNjY1MTE4fQ.uOjDqpXSF2wBM_Y7C2Dp8OJ4jngcc3yOJBTZKSRzKVM",v=Z(U,Y),u=V("task",{state:()=>({tasks:[]}),actions:{async getTask(){const e=await v.from("task").select("*").order("id",{ascending:!1});return this.task=e.data,e.data},async updateTask(e,t,o){await v.from("task").update({title:t,description:o}).eq("id",e)},async deleteTask(e){await v.from("task").delete().eq("id",e)},async addTask(e,t,o){const a=await v.from("task").insert({user_id:e,title:t,description:o});console.log(a),console.log("Funcion newTask")}}}),X={},z={class:"content has-text-centered"},W=s("h1",null,"Welcome",-1),H=s("p",null,"Hola, para usar esta To Do App tienes que esta registrado. Por favor, inicia sesi\xF3n o crea una cuenta",-1),K={class:"buttons is-centered"},G=s("strong",null,"Sign up",-1);function L(e,t){const o=j("router-link");return i(),l("div",z,[s("div",null,[W,H,s("div",K,[m(o,{to:{name:"register"},class:"button is-primary"},{default:S(()=>[G]),_:1}),m(o,{to:{name:"login"},class:"button is-light"},{default:S(()=>[N(" Log in ")]),_:1})])])])}const P=x(X,[["render",L]]),R={class:"columns"},Q=["onSubmit"],ss={class:"field"},ts=s("label",{class:"label"},"Title",-1),es={class:"control"},as={class:"field"},os=s("label",{class:"label"},"Description",-1),ns={class:"control"},is=O('<div class="field is-grouped"><div class="control"><button class="button is-link">Save</button></div><div class="control"><button class="button is-link is-light">Cancel</button></div></div>',1),ls={__name:"PostTask",setup(e){const t=u(),o=$(),a=_(""),n=_(""),d=async()=>{console.log("Formulario enviado"),a.value!==""&&n.value!==""&&(await t.addTask(o.$state.user.id,a.value,n.value),await t.getTask(),a.value="",n.value="",console.log("Task creada"))};return(f,c)=>(i(),l("div",R,[s("form",{onSubmit:I(d,["prevent"]),class:"column is-6 is-12-mobile is-offset-one-quarter box p-5"},[s("div",ss,[ts,s("div",es,[h(s("input",{"onUpdate:modelValue":c[0]||(c[0]=p=>a.value=p),class:"input",type:"text",placeholder:"Text input"},null,512),[[b,a.value]])])]),s("div",as,[os,s("div",ns,[h(s("textarea",{"onUpdate:modelValue":c[1]||(c[1]=p=>n.value=p),class:"textarea",placeholder:"Textarea"},null,512),[[b,n.value]])])]),is],40,Q)]))}};const g=e=>(D("data-v-99f2ebd1"),e=e(),F(),e),cs={class:"task notification box column is-4 is-12-mobile"},ds={key:0,class:"content content-task"},rs=g(()=>s("button",null,"Done",-1)),us={key:1},_s={class:"field"},ps=g(()=>s("label",{class:"label"},"Title",-1)),ks={class:"control"},vs=["placeholder"],ms={class:"field"},hs=g(()=>s("label",{class:"label"},"Description",-1)),bs={class:"control"},fs=["placeholder"],Ts={__name:"Task",props:{task:Object},setup(e){const t=e,o=u(),a=_(!1),n=_(""),d=_(""),f=async()=>{confirm("Are you sure you want to delete task id ?")&&(await o.deleteTask(t.task.id),await A(),console.log("eliminara task "+t.task.id))},c=()=>{a.value=!0},p=()=>{a.value=!1},C=async()=>{await o.updateTask(t.task.id,n.value,d.value),await o.getTask(),a.value=!1};return(y,r)=>(i(),l("div",cs,[s("button",{onClick:f,class:"delete is-medium"}),a.value?(i(),l("div",us,[s("form",{onSubmit:r[2]||(r[2]=I((...k)=>y.onSubmit&&y.onSubmit(...k),["prevent"]))},[s("div",_s,[ps,s("div",ks,[h(s("input",{"onUpdate:modelValue":r[0]||(r[0]=k=>n.value=k),class:"input",type:"text",placeholder:t.task.title},null,8,vs),[[b,n.value]])])]),s("div",ms,[hs,s("div",bs,[h(s("textarea",{"onUpdate:modelValue":r[1]||(r[1]=k=>d.value=k),class:"textarea",placeholder:t.task.description},null,8,fs),[[b,d.value]])])]),s("div",{class:"field is-grouped"},[s("div",{class:"control"},[s("button",{onClick:C,class:"button is-link"},"Save")]),s("div",{class:"control"},[s("button",{onClick:p,class:"button is-link is-light"},"Cancel")])])],32)])):(i(),l("div",ds,[s("h2",null,T(t.task.title),1),s("p",null,T(t.task.description),1),s("p",null,T(t.task.created_at),1),s("div",{class:"actions-task"},[s("button",{onClick:c},"Edit"),rs])]))]))}},gs=x(Ts,[["__scopeId","data-v-99f2ebd1"]]),ys=s("h1",null,"HOME",-1),Ss={key:0},ws={key:1},xs={class:"columns is-multiline mt-5"},Cs={__name:"Home",setup(e){const t=$(),o=u(),a=_();return M(u,()=>{u.tasks.data=u.tasks.data}),(async()=>{a.value=await o.getTask()})(),q(async()=>{}),(d,f)=>(i(),l(w,null,[ys,E(t).isAuth?(i(),l("div",ws,[m(ls),s("div",xs,[(i(!0),l(w,null,J(a.value,c=>(i(),B(gs,{task:c},null,8,["task"]))),256))])])):(i(),l("div",Ss,[m(P)]))],64))}};export{Cs as default};
