import{d as R,_ as x,r as F,o as i,c as r,a as s,b as f,w as S,e as C,u as I,f as _,g as m,v as b,h as $,i as M,t as y,n as w,j as O,p as q,k as J,l as A,m as B,F as U,q as Z,s as z}from"./index.39e889f8.js";import{c as E}from"./index.fd5972df.js";const Y="https://lyyqilmwickycckqcbjy.supabase.co",X="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx5eXFpbG13aWNreWNja3FjYmp5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY2NjA4OTExOCwiZXhwIjoxOTgxNjY1MTE4fQ.uOjDqpXSF2wBM_Y7C2Dp8OJ4jngcc3yOJBTZKSRzKVM",h=E(Y,X),T=R("task",{state:()=>({tasks:[]}),actions:{async getTask(){const t=await h.from("task").select("*").order("id",{ascending:!1});return this.task=t.data,t.data},async updateTask(t,a,e){await h.from("task").update({title:a,description:e}).eq("id",t)},async deleteTask(t){await h.from("task").delete().eq("id",t)},async addTask(t,a,e){const l=await h.from("task").insert({user_id:t,title:a,description:e});console.log(l),console.log("Funcion newTask")},async taskDone(t,a){const e=await h.from("task").update({isCompleted:a}).match({id:t});console.log(e),console.log("Funcion newTask")}}}),H={},W={class:"content has-text-centered"},K=s("h1",null,"Welcome",-1),G=s("p",null,"Hola, para usar esta To Do App tienes que esta registrado. Por favor, inicia sesi\xF3n o crea una cuenta",-1),L={class:"buttons is-centered"},P=s("strong",null,"Sign up",-1);function Q(t,a){const e=F("router-link");return i(),r("div",W,[s("div",null,[K,G,s("div",L,[f(e,{to:{name:"register"},class:"button is-primary"},{default:S(()=>[P]),_:1}),f(e,{to:{name:"login"},class:"button is-light"},{default:S(()=>[C(" Log in ")]),_:1})])])])}const ss=x(H,[["render",Q]]),es={class:"columns"},ts=["onSubmit"],as={class:"field"},os=s("label",{class:"label"},"Title",-1),ns={class:"control"},ls={class:"field"},is=s("label",{class:"label"},"Description",-1),cs={class:"control"},ds=M('<div class="field is-grouped"><div class="control"><button class="button is-link">Save</button></div><div class="control"><button class="button is-link is-light">Cancel</button></div></div>',1),rs={__name:"PostTask",emits:["handleRefresh"],setup(t,{emit:a}){const e=T(),l=I(),o=_(""),n=_(""),u=async()=>{o.value!==""&&n.value!==""&&(await e.addTask(l.$state.user.id,o.value,n.value),await e.getTask(),o.value="",n.value="",console.log("Task creada"),a("handleRefresh"))};return(k,c)=>(i(),r("div",es,[s("form",{onSubmit:$(u,["prevent"]),class:"column is-6 is-12-mobile is-offset-one-quarter box p-5"},[s("div",as,[os,s("div",ns,[m(s("input",{"onUpdate:modelValue":c[0]||(c[0]=v=>o.value=v),class:"input",type:"text",placeholder:"Task title"},null,512),[[b,o.value]])])]),s("div",ls,[is,s("div",cs,[m(s("textarea",{"onUpdate:modelValue":c[1]||(c[1]=v=>n.value=v),class:"textarea",placeholder:"Description"},null,512),[[b,n.value]])])]),ds],40,ts)]))}};const D=t=>(q("data-v-dba38ef1"),t=t(),J(),t),us={key:0,class:"content content-task"},ps={class:"actions-task"},_s={class:"checkbox"},ks={key:1},vs={class:"field"},hs=D(()=>s("label",{class:"label"},"Title",-1)),ms={class:"control"},fs=["placeholder"],bs={class:"field"},ys=D(()=>s("label",{class:"label"},"Description",-1)),Ts={class:"control"},gs=["placeholder"],Ss={__name:"Task",props:{task:Object},emits:["handleRefresh"],setup(t,{emit:a}){const e=t,l=T(),o=_(!1),n=_(e.task.title),u=_(e.task.description),k=_(e.task.isCompleted),c=async()=>{confirm("Are you sure you want to delete task id ?")&&(await l.deleteTask(e.task.id),a("handleRefresh"),console.log("eliminara task "+e.task.id))},v=()=>{o.value=!0},V=()=>{o.value=!1},j=async()=>{n.value!==""&&u.value!==""&&(await l.updateTask(e.task.id,n.value,u.value),a("handleRefresh"),o.value=!1)},N=async()=>{k.value=!k.value,await l.taskDone(e.task.id,k.value),a("handleRefresh")};return(g,d)=>(i(),r("div",{class:w(["task notification box column is-4 is-12-mobile",{doneStyle:e.task.isCompleted}])},[s("button",{onClick:c,class:"delete is-medium"}),o.value?(i(),r("div",ks,[s("form",{onSubmit:d[3]||(d[3]=$((...p)=>g.onSubmit&&g.onSubmit(...p),["prevent"]))},[s("div",vs,[hs,s("div",ms,[m(s("input",{"onUpdate:modelValue":d[1]||(d[1]=p=>n.value=p),class:"input",type:"text",placeholder:e.task.title},null,8,fs),[[b,n.value]])])]),s("div",bs,[ys,s("div",Ts,[m(s("textarea",{"onUpdate:modelValue":d[2]||(d[2]=p=>u.value=p),class:"textarea",placeholder:e.task.description},null,8,gs),[[b,u.value]])])]),s("div",{class:"field is-grouped"},[s("div",{class:"control"},[s("button",{onClick:j,class:"button is-link"},"Save")]),s("div",{class:"control"},[s("button",{onClick:V,class:"button is-link is-light"},"Cancel")])])],32)])):(i(),r("div",us,[s("h2",{class:w({textDone:e.task.isCompleted})},y(e.task.title),3),s("p",null,y(e.task.description),1),s("p",null,y(e.task.created_at),1),s("div",ps,[s("i",{onClick:v,class:"far fa-edit"}),s("label",_s,[m(s("input",{onClick:N,"onUpdate:modelValue":d[0]||(d[0]=p=>e.task.isCompleted=p),type:"checkbox"},null,512),[[O,e.task.isCompleted]]),C(" Done ")])])]))],2))}},ws=x(Ss,[["__scopeId","data-v-dba38ef1"]]),xs={key:0},Cs={key:1},Is={class:"columns is-multiline mt-5"},Vs={__name:"Home",setup(t){const a=I(),e=T(),l=_(),o=async()=>{l.value=await e.getTask(),console.log("Actualizar tasks")},n=async()=>{await o()};return A(async()=>{o()}),(u,k)=>B(a).isAuth?(i(),r("div",Cs,[f(rs,{onHandleRefresh:n}),s("div",Is,[(i(!0),r(U,null,Z(l.value,c=>(i(),z(ws,{task:c,onHandleRefresh:n},null,8,["task"]))),256))])])):(i(),r("div",xs,[f(ss)]))}};export{Vs as default};
